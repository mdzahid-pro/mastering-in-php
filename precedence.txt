Parentheses: () - Parentheses are used to override the default precedence and explicitly specify the order of evaluation.

Unary Operators: +, -, !, ~, ++, -- - Unary operators are applied to a single operand.

Multiplicative Operators: *, /, % - These operators perform multiplication, division, and modulus operations.

Additive Operators: +, - - These operators perform addition and subtraction.

String Concatenation Operator: . - This operator concatenates two strings.

Comparison Operators: ==, !=, ===, !==, <, <=, >, >= - These operators compare two operands.

Logical Operators: &&, ||, and, or, xor - These operators perform logical AND, logical OR, logical AND, logical OR, and exclusive OR operations.

Assignment Operators: =, +=, -=, *=, /=, %= - These operators assign values to variables.

Ternary Operator: ? : - This operator is a shorthand for an if...else statement.

Null Coalescing Operator: ?? - This operator returns the result of its first operand if it exists and is not NULL; otherwise, it returns its second operand.

Bitwise Shift Operators: <<, >> - These operators perform bitwise left and right shifts.

Bitwise Operators: &, |, ^ - These operators perform bitwise AND, OR, and XOR operations.








Parentheses:
$result = (2 + 3) * 4; // Parentheses override precedence, so addition is done first: 5 * 4 = 20

Unary Operators:
$a = 5;
$b = -$a; // Unary negation: $b = -5

Multiplicative Operators:
$result = 10 / 2 * 3; // Division first: 5 * 3 = 15

Additive Operators:
$result = 10 - 3 + 5; // Subtraction first: 7 + 5 = 12

String Concatenation Operator:
$string = "Hello " . "World"; // Concatenation: $string = "Hello World"

Comparison Operators:
$a = 5;
$b = 10;
$result = ($a < $b) ? "true" : "false"; // Comparison: $result = "true"

Logical Operators:
$a = true;
$b = false;
$result = ($a && $b) || ($a || !$b); // Logical AND and OR: $result = true

Assignment Operators:
$a = 5;
$a += 3; // Addition assignment: $a = 8

Ternary Operator:
$age = 18;
$status = ($age >= 18) ? "adult" : "minor"; // Ternary: $status = "adult"

Null Coalescing Operator:
$user = [
    'name' => 'John'
];
$username = $user['name'] ?? 'Guest'; // Null coalescing: $username = 'John'

Bitwise Shift Operators:
$result = 4 << 1; // Bitwise left shift: $result = 8

Bitwise Operators:
$result = 5 & 3; // Bitwise AND: $result = 1